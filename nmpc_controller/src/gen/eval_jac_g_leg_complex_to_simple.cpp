/* This file was automatically generated by CasADi.
   The CasADi copyright holders make no ownership claim of its contents. */
/* How to prefix internal symbols */
#ifdef CASADI_CODEGEN_PREFIX
  #define CASADI_NAMESPACE_CONCAT(NS, ID) _CASADI_NAMESPACE_CONCAT(NS, ID)
  #define _CASADI_NAMESPACE_CONCAT(NS, ID) NS ## ID
  #define CASADI_PREFIX(ID) CASADI_NAMESPACE_CONCAT(CODEGEN_PREFIX, ID)
#else
  #define CASADI_PREFIX(ID) eval_jac_g_leg_complex_to_simple_ ## ID
#endif

#include <math.h>

#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

/* Add prefix to internal symbols */
#define casadi_f0 CASADI_PREFIX(f0)
#define casadi_s0 CASADI_PREFIX(s0)
#define casadi_s1 CASADI_PREFIX(s1)
#define casadi_s2 CASADI_PREFIX(s2)
#define casadi_sq CASADI_PREFIX(sq)

/* Symbol visibility in DLLs */
#ifndef CASADI_SYMBOL_EXPORT
  #if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
    #if defined(STATIC_LINKED)
      #define CASADI_SYMBOL_EXPORT
    #else
      #define CASADI_SYMBOL_EXPORT __declspec(dllexport)
    #endif
  #elif defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
    #define CASADI_SYMBOL_EXPORT __attribute__ ((visibility ("default")))
  #else
    #define CASADI_SYMBOL_EXPORT
  #endif
#endif

casadi_real casadi_sq(casadi_real x) { return x*x;}

static const casadi_int casadi_s0[148] = {144, 1, 0, 144, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143};
static const casadi_int casadi_s1[18] = {14, 1, 0, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13};
static const casadi_int casadi_s2[444] = {52, 144, 0, 4, 8, 11, 16, 21, 24, 26, 28, 30, 34, 40, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 66, 68, 70, 72, 74, 76, 78, 80, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 82, 89, 96, 104, 111, 118, 126, 133, 140, 148, 155, 162, 170, 172, 174, 176, 178, 180, 182, 184, 186, 188, 190, 192, 194, 198, 202, 205, 210, 215, 218, 219, 220, 221, 225, 231, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255, 257, 259, 261, 263, 265, 267, 269, 271, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 273, 275, 277, 279, 281, 283, 285, 287, 289, 291, 293, 295, 297, 0, 9, 10, 11, 1, 9, 10, 11, 2, 9, 10, 3, 4, 5, 10, 11, 3, 4, 5, 9, 11, 5, 9, 10, 0, 6, 1, 7, 2, 8, 3, 9, 10, 11, 3, 4, 5, 9, 10, 11, 3, 4, 5, 9, 10, 11, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 28, 40, 29, 41, 30, 42, 31, 43, 32, 44, 33, 45, 34, 46, 35, 47, 36, 48, 37, 49, 38, 50, 39, 51, 0, 6, 9, 10, 11, 12, 13, 1, 7, 9, 10, 11, 14, 15, 2, 8, 9, 10, 12, 13, 14, 15, 0, 6, 9, 10, 11, 16, 17, 1, 7, 9, 10, 11, 18, 19, 2, 8, 9, 10, 16, 17, 18, 19, 0, 6, 9, 10, 11, 20, 21, 1, 7, 9, 10, 11, 22, 23, 2, 8, 9, 10, 20, 21, 22, 23, 0, 6, 9, 10, 11, 24, 25, 1, 7, 9, 10, 11, 26, 27, 2, 8, 9, 10, 24, 25, 26, 27, 28, 40, 29, 41, 30, 42, 31, 43, 32, 44, 33, 45, 34, 46, 35, 47, 36, 48, 37, 49, 38, 50, 39, 51, 0, 9, 10, 11, 1, 9, 10, 11, 2, 9, 10, 3, 4, 5, 10, 11, 3, 4, 5, 9, 11, 5, 9, 10, 6, 7, 8, 3, 9, 10, 11, 3, 4, 5, 9, 10, 11, 3, 4, 5, 9, 10, 11, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 28, 40, 29, 41, 30, 42, 31, 43, 32, 44, 33, 45, 34, 46, 35, 47, 36, 48, 37, 49, 38, 50, 39, 51, 28, 40, 29, 41, 30, 42, 31, 43, 32, 44, 33, 45, 34, 46, 35, 47, 36, 48, 37, 49, 38, 50, 39, 51};

/* eval_jac_g_leg_complex_to_simple:(w[144],p[14])->(jac_g[52x144,297nz]) */
static int casadi_f0(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem) {
  casadi_real a0, a1, a10, a100, a101, a102, a103, a104, a105, a106, a107, a108, a109, a11, a110, a111, a112, a113, a114, a115, a116, a117, a12, a13, a14, a15, a16, a17, a18, a19, a2, a20, a21, a22, a23, a24, a25, a26, a27, a28, a29, a3, a30, a31, a32, a33, a34, a35, a36, a37, a38, a39, a4, a40, a41, a42, a43, a44, a45, a46, a47, a48, a49, a5, a50, a51, a52, a53, a54, a55, a56, a57, a58, a59, a6, a60, a61, a62, a63, a64, a65, a66, a67, a68, a69, a7, a70, a71, a72, a73, a74, a75, a76, a77, a78, a79, a8, a80, a81, a82, a83, a84, a85, a86, a87, a88, a89, a9, a90, a91, a92, a93, a94, a95, a96, a97, a98, a99;
  a0=-1.;
  if (res[0]!=0) res[0][0]=a0;
  a1=5.0000000000000000e-01;
  a2=arg[0]? arg[0][4] : 0;
  a3=arg[0]? arg[0][88] : 0;
  a2=(a2+a3);
  a3=2.;
  a2=(a2/a3);
  a4=sin(a2);
  a5=arg[0]? arg[0][70] : 0;
  a6=arg[1]? arg[1][0] : 0;
  a7=(a5*a6);
  a8=(a4*a7);
  a9=arg[0]? arg[0][67] : 0;
  a10=(a9*a6);
  a11=(a4*a10);
  a8=(a8+a11);
  a11=arg[0]? arg[0][64] : 0;
  a12=(a11*a6);
  a13=(a4*a12);
  a8=(a8+a13);
  a13=arg[0]? arg[0][5] : 0;
  a14=arg[0]? arg[0][89] : 0;
  a13=(a13+a14);
  a13=(a13/a3);
  a14=sin(a13);
  a15=cos(a2);
  a16=arg[0]? arg[0][71] : 0;
  a17=(a16*a6);
  a18=(a15*a17);
  a19=arg[0]? arg[0][68] : 0;
  a20=(a19*a6);
  a21=(a15*a20);
  a22=(a18+a21);
  a23=arg[0]? arg[0][65] : 0;
  a24=(a23*a6);
  a25=(a15*a24);
  a22=(a22+a25);
  a26=arg[0]? arg[0][62] : 0;
  a27=(a26*a6);
  a28=(a15*a27);
  a22=(a22+a28);
  a29=(a14*a22);
  a8=(a8+a29);
  a29=arg[0]? arg[0][61] : 0;
  a30=(a29*a6);
  a31=(a4*a30);
  a8=(a8+a31);
  a8=(a1*a8);
  a8=(-a8);
  if (res[0]!=0) res[0][1]=a8;
  a31=cos(a13);
  a16=(a16*a6);
  a19=(a19*a6);
  a32=(a16+a19);
  a23=(a23*a6);
  a32=(a32+a23);
  a26=(a26*a6);
  a32=(a32+a26);
  a33=(a31*a32);
  a33=(a1*a33);
  a33=(-a33);
  if (res[0]!=0) res[0][2]=a33;
  a34=(a5*a6);
  a35=(a9*a6);
  a34=(a34+a35);
  a35=(a11*a6);
  a34=(a34+a35);
  a35=(a29*a6);
  a34=(a34+a35);
  a34=(a1*a34);
  if (res[0]!=0) res[0][3]=a34;
  if (res[0]!=0) res[0][4]=a0;
  a35=arg[0]? arg[0][69] : 0;
  a36=(a35*a6);
  a37=(a4*a36);
  a38=arg[0]? arg[0][66] : 0;
  a39=(a38*a6);
  a40=(a4*a39);
  a37=(a37+a40);
  a40=arg[0]? arg[0][63] : 0;
  a41=(a40*a6);
  a42=(a4*a41);
  a37=(a37+a42);
  a42=(a18+a21);
  a42=(a42+a25);
  a42=(a42+a28);
  a43=(a31*a42);
  a37=(a37+a43);
  a43=arg[0]? arg[0][60] : 0;
  a44=(a43*a6);
  a45=(a4*a44);
  a37=(a37+a45);
  a37=(a1*a37);
  if (res[0]!=0) res[0][5]=a37;
  a45=(a16+a19);
  a45=(a45+a23);
  a45=(a45+a26);
  a46=(a14*a45);
  a46=(a1*a46);
  a46=(-a46);
  if (res[0]!=0) res[0][6]=a46;
  a47=(a35*a6);
  a48=(a38*a6);
  a47=(a47+a48);
  a48=(a40*a6);
  a47=(a47+a48);
  a48=(a43*a6);
  a47=(a47+a48);
  a47=(a1*a47);
  a47=(-a47);
  if (res[0]!=0) res[0][7]=a47;
  if (res[0]!=0) res[0][8]=a0;
  a48=(a15*a31);
  a49=(a48*a7);
  a50=(a15*a14);
  a51=(a50*a36);
  a49=(a49-a51);
  a51=(a15*a31);
  a52=(a51*a10);
  a53=(a15*a14);
  a54=(a53*a39);
  a52=(a52-a54);
  a49=(a49+a52);
  a52=(a15*a31);
  a54=(a52*a12);
  a55=(a15*a14);
  a56=(a55*a41);
  a54=(a54-a56);
  a49=(a49+a54);
  a54=(a15*a31);
  a56=(a54*a30);
  a57=(a15*a14);
  a58=(a57*a44);
  a56=(a56-a58);
  a49=(a49+a56);
  a49=(a1*a49);
  a49=(-a49);
  if (res[0]!=0) res[0][9]=a49;
  a5=(a5*a6);
  a56=(a14*a5);
  a35=(a35*a6);
  a58=(a31*a35);
  a56=(a56+a58);
  a9=(a9*a6);
  a58=(a14*a9);
  a38=(a38*a6);
  a59=(a31*a38);
  a58=(a58+a59);
  a56=(a56+a58);
  a11=(a11*a6);
  a58=(a14*a11);
  a40=(a40*a6);
  a59=(a31*a40);
  a58=(a58+a59);
  a56=(a56+a58);
  a29=(a29*a6);
  a58=(a14*a29);
  a43=(a43*a6);
  a59=(a31*a43);
  a58=(a58+a59);
  a56=(a56+a58);
  a56=(a1*a56);
  if (res[0]!=0) res[0][10]=a56;
  a58=arg[0]? arg[0][3] : 0;
  a59=arg[0]? arg[0][87] : 0;
  a58=(a58+a59);
  a58=(a58/a3);
  a59=sin(a58);
  a60=arg[0]? arg[0][11] : 0;
  a61=arg[0]? arg[0][95] : 0;
  a62=(a60+a61);
  a62=(a62/a3);
  a63=(a6/a15);
  a64=(a4*a63);
  a65=(a62*a64);
  a65=(a59*a65);
  a66=cos(a58);
  a67=arg[0]? arg[0][10] : 0;
  a68=arg[0]? arg[0][94] : 0;
  a69=(a67+a68);
  a69=(a69/a3);
  a70=(a4*a63);
  a71=(a69*a70);
  a71=(a66*a71);
  a65=(a65-a71);
  a65=(a1*a65);
  a71=(a65+a0);
  if (res[0]!=0) res[0][11]=a71;
  a71=(a62*a6);
  a71=(a66*a71);
  a72=(a69*a6);
  a72=(a59*a72);
  a71=(a71+a72);
  a71=(a1*a71);
  if (res[0]!=0) res[0][12]=a71;
  a72=(a6/a15);
  a73=(a62*a72);
  a73=(a59*a73);
  a74=(a69*a72);
  a74=(a66*a74);
  a73=(a73-a74);
  a73=(a1*a73);
  if (res[0]!=0) res[0][13]=a73;
  a74=24358218631252112.;
  a75=arg[0]? arg[0][9] : 0;
  a76=arg[0]? arg[0][93] : 0;
  a77=(a75+a76);
  a77=(a77/a3);
  a78=-1.3877787807814460e-17;
  a78=(a78*a6);
  a79=(a77*a78);
  a80=(a74*a79);
  a81=(a69*a80);
  a82=-4.6021926780173911e-01;
  a61=(a61-a60);
  a60=(a82*a61);
  a81=(a81+a60);
  a81=(a66*a81);
  a60=26445640661418040.;
  a79=(a60*a79);
  a83=(a62*a79);
  a84=4.3125046780173909e-01;
  a68=(a68-a67);
  a67=(a84*a68);
  a83=(a83+a67);
  a83=(a59*a83);
  a81=(a81-a83);
  a81=(a1*a81);
  if (res[0]!=0) res[0][14]=a81;
  a68=(a84*a68);
  a83=(a15*a68);
  a67=(a77*a62);
  a85=(a67*a15);
  a86=3.6700698954086952e-01;
  a86=(a86*a6);
  a85=(a85*a86);
  a83=(a83-a85);
  a66=(a66*a83);
  a83=(a77*a69);
  a85=3.3803818954086950e-01;
  a85=(a85*a6);
  a87=(a15*a85);
  a88=(a83*a87);
  a89=4.6021926780173911e-01;
  a61=(a89*a61);
  a90=(a15*a61);
  a88=(a88+a90);
  a59=(a59*a88);
  a66=(a66-a59);
  a66=(a1*a66);
  if (res[0]!=0) res[0][15]=a66;
  a59=cos(a2);
  a88=sin(a58);
  a90=(a69*a88);
  a91=(a90*a63);
  a58=cos(a58);
  a92=(a62*a58);
  a93=(a92*a63);
  a91=(a91+a93);
  a91=(a59*a91);
  a2=sin(a2);
  a93=(a77*a15);
  a92=(a92*a4);
  a93=(a93+a92);
  a90=(a90*a4);
  a93=(a93+a90);
  a93=(a93/a15);
  a93=(a93/a15);
  a93=(a93*a6);
  a63=(a77*a63);
  a93=(a93-a63);
  a93=(a2*a93);
  a91=(a91+a93);
  a91=(a1*a91);
  a91=(-a91);
  if (res[0]!=0) res[0][16]=a91;
  if (res[0]!=0) res[0][17]=a0;
  a93=(a62*a58);
  a63=(a69*a88);
  a93=(a93+a63);
  a93=(a93/a15);
  a93=(a93/a15);
  a93=(a93*a6);
  a93=(a2*a93);
  a93=(a1*a93);
  a93=(-a93);
  if (res[0]!=0) res[0][18]=a93;
  a63=arg[1]? arg[1][11] : 0;
  a90=arg[0]? arg[0][0] : 0;
  a92=arg[0]? arg[0][84] : 0;
  a90=(a90+a92);
  a90=(a90/a3);
  a92=(a63-a90);
  a94=(a92*a7);
  a95=arg[1]? arg[1][12] : 0;
  a96=arg[0]? arg[0][1] : 0;
  a97=arg[0]? arg[0][85] : 0;
  a96=(a96+a97);
  a96=(a96/a3);
  a97=(a95-a96);
  a98=(a97*a36);
  a94=(a94-a98);
  a98=arg[1]? arg[1][8] : 0;
  a99=(a98-a90);
  a100=(a99*a10);
  a94=(a94+a100);
  a100=arg[1]? arg[1][9] : 0;
  a101=(a100-a96);
  a102=(a101*a39);
  a94=(a94-a102);
  a102=arg[1]? arg[1][5] : 0;
  a103=(a102-a90);
  a104=(a103*a12);
  a94=(a94+a104);
  a104=arg[1]? arg[1][6] : 0;
  a105=(a104-a96);
  a106=(a105*a41);
  a94=(a94-a106);
  a106=arg[1]? arg[1][2] : 0;
  a107=(a106-a90);
  a108=(a107*a30);
  a94=(a94+a108);
  a108=arg[1]? arg[1][3] : 0;
  a109=(a108-a96);
  a110=(a109*a44);
  a94=(a94-a110);
  a94=(a59*a94);
  a110=(a96*a31);
  a111=(a90*a14);
  a112=(a110-a111);
  a113=(a95*a31);
  a112=(a112-a113);
  a113=(a63*a14);
  a112=(a112+a113);
  a17=(a112*a17);
  a113=arg[1]? arg[1][13] : 0;
  a114=arg[0]? arg[0][2] : 0;
  a115=arg[0]? arg[0][86] : 0;
  a114=(a114+a115);
  a114=(a114/a3);
  a113=(a113-a114);
  a7=(a113*a7);
  a115=(a31*a7);
  a17=(a17+a115);
  a36=(a113*a36);
  a115=(a14*a36);
  a17=(a17-a115);
  a115=(a110-a111);
  a116=(a100*a31);
  a115=(a115-a116);
  a116=(a98*a14);
  a115=(a115+a116);
  a20=(a115*a20);
  a17=(a17+a20);
  a20=arg[1]? arg[1][10] : 0;
  a20=(a20-a114);
  a10=(a20*a10);
  a116=(a31*a10);
  a17=(a17+a116);
  a39=(a20*a39);
  a116=(a14*a39);
  a17=(a17-a116);
  a116=(a110-a111);
  a117=(a104*a31);
  a116=(a116-a117);
  a117=(a102*a14);
  a116=(a116+a117);
  a24=(a116*a24);
  a17=(a17+a24);
  a24=arg[1]? arg[1][7] : 0;
  a24=(a24-a114);
  a12=(a24*a12);
  a117=(a31*a12);
  a17=(a17+a117);
  a41=(a24*a41);
  a117=(a14*a41);
  a17=(a17-a117);
  a110=(a110-a111);
  a111=(a108*a31);
  a110=(a110-a111);
  a111=(a106*a14);
  a110=(a110+a111);
  a27=(a110*a27);
  a17=(a17+a27);
  a27=arg[1]? arg[1][4] : 0;
  a27=(a27-a114);
  a30=(a27*a30);
  a114=(a31*a30);
  a17=(a17+a114);
  a44=(a27*a44);
  a114=(a14*a44);
  a17=(a17-a114);
  a17=(a2*a17);
  a94=(a94-a17);
  a94=(a1*a94);
  if (res[0]!=0) res[0][19]=a94;
  a17=(a69*a62);
  a114=-2.8968800000000020e-02;
  a114=(a114*a6);
  a17=(a17*a114);
  a111=-9.3212278260869572e-02;
  a76=(a76-a75);
  a76=(a111*a76);
  a17=(a17+a76);
  a59=(a59*a17);
  a83=(a83*a58);
  a83=(a83*a85);
  a86=(a88*a86);
  a67=(a67*a86);
  a83=(a83-a67);
  a61=(a58*a61);
  a83=(a83+a61);
  a68=(a88*a68);
  a83=(a83+a68);
  a2=(a2*a83);
  a59=(a59-a2);
  a59=(a1*a59);
  if (res[0]!=0) res[0][20]=a59;
  if (res[0]!=0) res[0][21]=a0;
  a2=cos(a13);
  a83=(a63*a18);
  a36=(a15*a36);
  a83=(a83-a36);
  a36=(a98*a21);
  a83=(a83+a36);
  a39=(a15*a39);
  a83=(a83-a39);
  a39=(a102*a25);
  a83=(a83+a39);
  a41=(a15*a41);
  a83=(a83-a41);
  a41=(a106*a28);
  a83=(a83+a41);
  a22=(a90*a22);
  a83=(a83-a22);
  a44=(a15*a44);
  a83=(a83-a44);
  a83=(a2*a83);
  a13=sin(a13);
  a7=(a15*a7);
  a18=(a95*a18);
  a7=(a7-a18);
  a21=(a100*a21);
  a7=(a7-a21);
  a10=(a15*a10);
  a7=(a7+a10);
  a25=(a104*a25);
  a7=(a7-a25);
  a12=(a15*a12);
  a7=(a7+a12);
  a28=(a108*a28);
  a7=(a7-a28);
  a42=(a96*a42);
  a7=(a7+a42);
  a30=(a15*a30);
  a7=(a7+a30);
  a7=(a13*a7);
  a83=(a83-a7);
  a83=(a1*a83);
  if (res[0]!=0) res[0][22]=a83;
  a7=(a95*a16);
  a5=(a113*a5);
  a7=(a7-a5);
  a5=(a100*a19);
  a7=(a7+a5);
  a9=(a20*a9);
  a7=(a7-a9);
  a9=(a104*a23);
  a7=(a7+a9);
  a11=(a24*a11);
  a7=(a7-a11);
  a11=(a108*a26);
  a7=(a7+a11);
  a45=(a96*a45);
  a7=(a7-a45);
  a29=(a27*a29);
  a7=(a7-a29);
  a2=(a2*a7);
  a16=(a63*a16);
  a35=(a113*a35);
  a16=(a16-a35);
  a19=(a98*a19);
  a16=(a16+a19);
  a38=(a20*a38);
  a16=(a16-a38);
  a23=(a102*a23);
  a16=(a16+a23);
  a40=(a24*a40);
  a16=(a16-a40);
  a26=(a106*a26);
  a16=(a16+a26);
  a32=(a90*a32);
  a16=(a16-a32);
  a43=(a27*a43);
  a16=(a16-a43);
  a13=(a13*a16);
  a2=(a2-a13);
  a2=(a1*a2);
  if (res[0]!=0) res[0][23]=a2;
  a13=(-a6);
  if (res[0]!=0) res[0][24]=a13;
  if (res[0]!=0) res[0][25]=a0;
  a13=(-a6);
  if (res[0]!=0) res[0][26]=a13;
  if (res[0]!=0) res[0][27]=a0;
  a13=(-a6);
  if (res[0]!=0) res[0][28]=a13;
  if (res[0]!=0) res[0][29]=a0;
  a13=(a1*a6);
  a13=(-a13);
  if (res[0]!=0) res[0][30]=a13;
  if (res[0]!=0) res[0][31]=a111;
  a16=(a62*a58);
  a60=(a60*a16);
  a16=(a69*a88);
  a74=(a74*a16);
  a60=(a60+a74);
  a60=(a60*a78);
  a60=(a1*a60);
  if (res[0]!=0) res[0][32]=a60;
  a87=(a58*a87);
  a78=(a69*a87);
  a86=(a15*a86);
  a74=(a62*a86);
  a78=(a78-a74);
  a78=(a1*a78);
  a111=(a111*a4);
  a74=(a78-a111);
  if (res[0]!=0) res[0][33]=a74;
  a70=(a88*a70);
  a70=(a1*a70);
  a70=(-a70);
  if (res[0]!=0) res[0][34]=a70;
  a74=(a58*a6);
  a74=(a1*a74);
  a74=(-a74);
  if (res[0]!=0) res[0][35]=a74;
  a16=(a88*a72);
  a16=(a1*a16);
  a16=(-a16);
  if (res[0]!=0) res[0][36]=a16;
  a43=2.8968800000000020e-02;
  a43=(a43*a6);
  a32=(a62*a43);
  a32=(a1*a32);
  if (res[0]!=0) res[0][37]=a32;
  a80=(a88*a80);
  a80=(a1*a80);
  a26=(a84*a58);
  a40=(a80-a26);
  if (res[0]!=0) res[0][38]=a40;
  a87=(a77*a87);
  a114=(a4*a114);
  a62=(a62*a114);
  a87=(a87+a62);
  a87=(a1*a87);
  a62=(a15*a88);
  a84=(a84*a62);
  a62=(a87-a84);
  if (res[0]!=0) res[0][39]=a62;
  a64=(a58*a64);
  a64=(a1*a64);
  a64=(-a64);
  if (res[0]!=0) res[0][40]=a64;
  a62=(a88*a6);
  a62=(a1*a62);
  if (res[0]!=0) res[0][41]=a62;
  a72=(a58*a72);
  a72=(a1*a72);
  a72=(-a72);
  if (res[0]!=0) res[0][42]=a72;
  a43=(a69*a43);
  a43=(a1*a43);
  if (res[0]!=0) res[0][43]=a43;
  a79=(a58*a79);
  a79=(a1*a79);
  a82=(a82*a88);
  a88=(a79-a82);
  if (res[0]!=0) res[0][44]=a88;
  a69=(a69*a114);
  a77=(a77*a86);
  a69=(a69-a77);
  a69=(a1*a69);
  a58=(a58*a15);
  a89=(a89*a58);
  a58=(a69-a89);
  if (res[0]!=0) res[0][45]=a58;
  a58=-3.;
  a3=(a3*a6);
  a58=(a58/a3);
  if (res[0]!=0) res[0][46]=a58;
  if (res[0]!=0) res[0][47]=a58;
  if (res[0]!=0) res[0][48]=a58;
  if (res[0]!=0) res[0][49]=a58;
  if (res[0]!=0) res[0][50]=a58;
  if (res[0]!=0) res[0][51]=a58;
  if (res[0]!=0) res[0][52]=a58;
  if (res[0]!=0) res[0][53]=a58;
  if (res[0]!=0) res[0][54]=a58;
  if (res[0]!=0) res[0][55]=a58;
  if (res[0]!=0) res[0][56]=a58;
  if (res[0]!=0) res[0][57]=a58;
  a3=-7.5000000000000000e-01;
  if (res[0]!=0) res[0][58]=a3;
  if (res[0]!=0) res[0][59]=a58;
  if (res[0]!=0) res[0][60]=a3;
  if (res[0]!=0) res[0][61]=a58;
  if (res[0]!=0) res[0][62]=a3;
  if (res[0]!=0) res[0][63]=a58;
  if (res[0]!=0) res[0][64]=a3;
  if (res[0]!=0) res[0][65]=a58;
  if (res[0]!=0) res[0][66]=a3;
  if (res[0]!=0) res[0][67]=a58;
  if (res[0]!=0) res[0][68]=a3;
  if (res[0]!=0) res[0][69]=a58;
  if (res[0]!=0) res[0][70]=a3;
  if (res[0]!=0) res[0][71]=a58;
  if (res[0]!=0) res[0][72]=a3;
  if (res[0]!=0) res[0][73]=a58;
  if (res[0]!=0) res[0][74]=a3;
  if (res[0]!=0) res[0][75]=a58;
  if (res[0]!=0) res[0][76]=a3;
  if (res[0]!=0) res[0][77]=a58;
  if (res[0]!=0) res[0][78]=a3;
  if (res[0]!=0) res[0][79]=a58;
  if (res[0]!=0) res[0][80]=a3;
  if (res[0]!=0) res[0][81]=a58;
  a77=7.5187969924812026e-02;
  a86=casadi_sq(a6);
  a114=(a1*a86);
  a114=(a77*a114);
  a114=(-a114);
  if (res[0]!=0) res[0][82]=a114;
  a88=(a77*a6);
  a88=(-a88);
  if (res[0]!=0) res[0][83]=a88;
  a109=(a4*a109);
  a57=(a57*a27);
  a109=(a109+a57);
  a109=(a109*a6);
  a109=(-a109);
  if (res[0]!=0) res[0][84]=a109;
  a109=(a31*a27);
  a109=(a109*a6);
  a109=(-a109);
  if (res[0]!=0) res[0][85]=a109;
  a109=(a96-a108);
  a109=(a109*a6);
  a109=(-a109);
  if (res[0]!=0) res[0][86]=a109;
  a109=1.;
  if (res[0]!=0) res[0][87]=a109;
  if (res[0]!=0) res[0][88]=a0;
  a57=(a1*a86);
  a57=(a77*a57);
  a57=(-a57);
  if (res[0]!=0) res[0][89]=a57;
  a40=(a77*a6);
  a40=(-a40);
  if (res[0]!=0) res[0][90]=a40;
  a23=(a4*a107);
  a54=(a54*a27);
  a23=(a23+a54);
  a23=(a23*a6);
  if (res[0]!=0) res[0][91]=a23;
  a27=(a14*a27);
  a27=(a27*a6);
  a27=(-a27);
  if (res[0]!=0) res[0][92]=a27;
  a107=(a107*a6);
  a107=(-a107);
  if (res[0]!=0) res[0][93]=a107;
  if (res[0]!=0) res[0][94]=a109;
  if (res[0]!=0) res[0][95]=a0;
  a1=(a1*a86);
  a1=(a77*a1);
  a1=(-a1);
  if (res[0]!=0) res[0][96]=a1;
  a77=(a77*a6);
  a77=(-a77);
  if (res[0]!=0) res[0][97]=a77;
  a110=(a15*a110);
  a110=(a110*a6);
  if (res[0]!=0) res[0][98]=a110;
  a90=(a90*a31);
  a110=(a96*a14);
  a86=(a90+a110);
  a106=(a106*a31);
  a86=(a86-a106);
  a108=(a108*a14);
  a86=(a86-a108);
  a86=(a86*a6);
  a86=(-a86);
  if (res[0]!=0) res[0][99]=a86;
  a86=arg[1]? arg[1][1] : 0;
  a108=(-a86);
  if (res[0]!=0) res[0][100]=a108;
  a108=(-a86);
  if (res[0]!=0) res[0][101]=a108;
  a108=(-a86);
  if (res[0]!=0) res[0][102]=a108;
  a108=(-a86);
  if (res[0]!=0) res[0][103]=a108;
  if (res[0]!=0) res[0][104]=a114;
  if (res[0]!=0) res[0][105]=a88;
  a105=(a4*a105);
  a55=(a55*a24);
  a105=(a105+a55);
  a105=(a105*a6);
  a105=(-a105);
  if (res[0]!=0) res[0][106]=a105;
  a105=(a31*a24);
  a105=(a105*a6);
  a105=(-a105);
  if (res[0]!=0) res[0][107]=a105;
  a105=(a96-a104);
  a105=(a105*a6);
  a105=(-a105);
  if (res[0]!=0) res[0][108]=a105;
  if (res[0]!=0) res[0][109]=a109;
  if (res[0]!=0) res[0][110]=a0;
  if (res[0]!=0) res[0][111]=a57;
  if (res[0]!=0) res[0][112]=a40;
  a105=(a4*a103);
  a52=(a52*a24);
  a105=(a105+a52);
  a105=(a105*a6);
  if (res[0]!=0) res[0][113]=a105;
  a24=(a14*a24);
  a24=(a24*a6);
  a24=(-a24);
  if (res[0]!=0) res[0][114]=a24;
  a103=(a103*a6);
  a103=(-a103);
  if (res[0]!=0) res[0][115]=a103;
  if (res[0]!=0) res[0][116]=a109;
  if (res[0]!=0) res[0][117]=a0;
  if (res[0]!=0) res[0][118]=a1;
  if (res[0]!=0) res[0][119]=a77;
  a116=(a15*a116);
  a116=(a116*a6);
  if (res[0]!=0) res[0][120]=a116;
  a116=(a90+a110);
  a102=(a102*a31);
  a116=(a116-a102);
  a104=(a104*a14);
  a116=(a116-a104);
  a116=(a116*a6);
  a116=(-a116);
  if (res[0]!=0) res[0][121]=a116;
  a116=(-a86);
  if (res[0]!=0) res[0][122]=a116;
  a116=(-a86);
  if (res[0]!=0) res[0][123]=a116;
  a116=(-a86);
  if (res[0]!=0) res[0][124]=a116;
  a116=(-a86);
  if (res[0]!=0) res[0][125]=a116;
  if (res[0]!=0) res[0][126]=a114;
  if (res[0]!=0) res[0][127]=a88;
  a101=(a4*a101);
  a53=(a53*a20);
  a101=(a101+a53);
  a101=(a101*a6);
  a101=(-a101);
  if (res[0]!=0) res[0][128]=a101;
  a101=(a31*a20);
  a101=(a101*a6);
  a101=(-a101);
  if (res[0]!=0) res[0][129]=a101;
  a101=(a96-a100);
  a101=(a101*a6);
  a101=(-a101);
  if (res[0]!=0) res[0][130]=a101;
  if (res[0]!=0) res[0][131]=a109;
  if (res[0]!=0) res[0][132]=a0;
  if (res[0]!=0) res[0][133]=a57;
  if (res[0]!=0) res[0][134]=a40;
  a101=(a4*a99);
  a51=(a51*a20);
  a101=(a101+a51);
  a101=(a101*a6);
  if (res[0]!=0) res[0][135]=a101;
  a20=(a14*a20);
  a20=(a20*a6);
  a20=(-a20);
  if (res[0]!=0) res[0][136]=a20;
  a99=(a99*a6);
  a99=(-a99);
  if (res[0]!=0) res[0][137]=a99;
  if (res[0]!=0) res[0][138]=a109;
  if (res[0]!=0) res[0][139]=a0;
  if (res[0]!=0) res[0][140]=a1;
  if (res[0]!=0) res[0][141]=a77;
  a115=(a15*a115);
  a115=(a115*a6);
  if (res[0]!=0) res[0][142]=a115;
  a115=(a90+a110);
  a98=(a98*a31);
  a115=(a115-a98);
  a100=(a100*a14);
  a115=(a115-a100);
  a115=(a115*a6);
  a115=(-a115);
  if (res[0]!=0) res[0][143]=a115;
  a115=(-a86);
  if (res[0]!=0) res[0][144]=a115;
  a115=(-a86);
  if (res[0]!=0) res[0][145]=a115;
  a115=(-a86);
  if (res[0]!=0) res[0][146]=a115;
  a115=(-a86);
  if (res[0]!=0) res[0][147]=a115;
  if (res[0]!=0) res[0][148]=a114;
  if (res[0]!=0) res[0][149]=a88;
  a97=(a4*a97);
  a50=(a50*a113);
  a97=(a97+a50);
  a97=(a97*a6);
  a97=(-a97);
  if (res[0]!=0) res[0][150]=a97;
  a97=(a31*a113);
  a97=(a97*a6);
  a97=(-a97);
  if (res[0]!=0) res[0][151]=a97;
  a96=(a96-a95);
  a96=(a96*a6);
  a96=(-a96);
  if (res[0]!=0) res[0][152]=a96;
  if (res[0]!=0) res[0][153]=a109;
  if (res[0]!=0) res[0][154]=a0;
  if (res[0]!=0) res[0][155]=a57;
  if (res[0]!=0) res[0][156]=a40;
  a4=(a4*a92);
  a48=(a48*a113);
  a4=(a4+a48);
  a4=(a4*a6);
  if (res[0]!=0) res[0][157]=a4;
  a113=(a14*a113);
  a113=(a113*a6);
  a113=(-a113);
  if (res[0]!=0) res[0][158]=a113;
  a92=(a92*a6);
  a92=(-a92);
  if (res[0]!=0) res[0][159]=a92;
  if (res[0]!=0) res[0][160]=a109;
  if (res[0]!=0) res[0][161]=a0;
  if (res[0]!=0) res[0][162]=a1;
  if (res[0]!=0) res[0][163]=a77;
  a15=(a15*a112);
  a15=(a15*a6);
  if (res[0]!=0) res[0][164]=a15;
  a90=(a90+a110);
  a63=(a63*a31);
  a90=(a90-a63);
  a95=(a95*a14);
  a90=(a90-a95);
  a90=(a90*a6);
  a90=(-a90);
  if (res[0]!=0) res[0][165]=a90;
  a90=(-a86);
  if (res[0]!=0) res[0][166]=a90;
  a90=(-a86);
  if (res[0]!=0) res[0][167]=a90;
  a90=(-a86);
  if (res[0]!=0) res[0][168]=a90;
  a86=(-a86);
  if (res[0]!=0) res[0][169]=a86;
  a86=100.;
  a90=8.;
  a6=(a6/a90);
  a90=(a86*a6);
  a90=(-a90);
  if (res[0]!=0) res[0][170]=a90;
  a90=-75.;
  if (res[0]!=0) res[0][171]=a90;
  a95=(a86*a6);
  a95=(-a95);
  if (res[0]!=0) res[0][172]=a95;
  if (res[0]!=0) res[0][173]=a90;
  a95=(a86*a6);
  a95=(-a95);
  if (res[0]!=0) res[0][174]=a95;
  if (res[0]!=0) res[0][175]=a90;
  a95=(a86*a6);
  a95=(-a95);
  if (res[0]!=0) res[0][176]=a95;
  if (res[0]!=0) res[0][177]=a90;
  a95=(a86*a6);
  a95=(-a95);
  if (res[0]!=0) res[0][178]=a95;
  if (res[0]!=0) res[0][179]=a90;
  a95=(a86*a6);
  a95=(-a95);
  if (res[0]!=0) res[0][180]=a95;
  if (res[0]!=0) res[0][181]=a90;
  a95=(a86*a6);
  a95=(-a95);
  if (res[0]!=0) res[0][182]=a95;
  if (res[0]!=0) res[0][183]=a90;
  a95=(a86*a6);
  a95=(-a95);
  if (res[0]!=0) res[0][184]=a95;
  if (res[0]!=0) res[0][185]=a90;
  a95=(a86*a6);
  a95=(-a95);
  if (res[0]!=0) res[0][186]=a95;
  if (res[0]!=0) res[0][187]=a90;
  a95=(a86*a6);
  a95=(-a95);
  if (res[0]!=0) res[0][188]=a95;
  if (res[0]!=0) res[0][189]=a90;
  a95=(a86*a6);
  a95=(-a95);
  if (res[0]!=0) res[0][190]=a95;
  if (res[0]!=0) res[0][191]=a90;
  a95=(a86*a6);
  a95=(-a95);
  if (res[0]!=0) res[0][192]=a95;
  if (res[0]!=0) res[0][193]=a90;
  if (res[0]!=0) res[0][194]=a109;
  if (res[0]!=0) res[0][195]=a8;
  if (res[0]!=0) res[0][196]=a33;
  if (res[0]!=0) res[0][197]=a34;
  if (res[0]!=0) res[0][198]=a109;
  if (res[0]!=0) res[0][199]=a37;
  if (res[0]!=0) res[0][200]=a46;
  if (res[0]!=0) res[0][201]=a47;
  if (res[0]!=0) res[0][202]=a109;
  if (res[0]!=0) res[0][203]=a49;
  if (res[0]!=0) res[0][204]=a56;
  a65=(a65+a109);
  if (res[0]!=0) res[0][205]=a65;
  if (res[0]!=0) res[0][206]=a71;
  if (res[0]!=0) res[0][207]=a73;
  if (res[0]!=0) res[0][208]=a81;
  if (res[0]!=0) res[0][209]=a66;
  if (res[0]!=0) res[0][210]=a91;
  if (res[0]!=0) res[0][211]=a109;
  if (res[0]!=0) res[0][212]=a93;
  if (res[0]!=0) res[0][213]=a94;
  if (res[0]!=0) res[0][214]=a59;
  if (res[0]!=0) res[0][215]=a109;
  if (res[0]!=0) res[0][216]=a83;
  if (res[0]!=0) res[0][217]=a2;
  if (res[0]!=0) res[0][218]=a109;
  if (res[0]!=0) res[0][219]=a109;
  if (res[0]!=0) res[0][220]=a109;
  if (res[0]!=0) res[0][221]=a13;
  a13=9.3212278260869572e-02;
  if (res[0]!=0) res[0][222]=a13;
  if (res[0]!=0) res[0][223]=a60;
  a111=(a111+a78);
  if (res[0]!=0) res[0][224]=a111;
  if (res[0]!=0) res[0][225]=a70;
  if (res[0]!=0) res[0][226]=a74;
  if (res[0]!=0) res[0][227]=a16;
  if (res[0]!=0) res[0][228]=a32;
  a26=(a26+a80);
  if (res[0]!=0) res[0][229]=a26;
  a84=(a84+a87);
  if (res[0]!=0) res[0][230]=a84;
  if (res[0]!=0) res[0][231]=a64;
  if (res[0]!=0) res[0][232]=a62;
  if (res[0]!=0) res[0][233]=a72;
  if (res[0]!=0) res[0][234]=a43;
  a82=(a82+a79);
  if (res[0]!=0) res[0][235]=a82;
  a89=(a89+a69);
  if (res[0]!=0) res[0][236]=a89;
  a89=(-a58);
  if (res[0]!=0) res[0][237]=a89;
  a89=(-a58);
  if (res[0]!=0) res[0][238]=a89;
  a89=(-a58);
  if (res[0]!=0) res[0][239]=a89;
  a89=(-a58);
  if (res[0]!=0) res[0][240]=a89;
  a89=(-a58);
  if (res[0]!=0) res[0][241]=a89;
  a89=(-a58);
  if (res[0]!=0) res[0][242]=a89;
  a89=(-a58);
  if (res[0]!=0) res[0][243]=a89;
  a89=(-a58);
  if (res[0]!=0) res[0][244]=a89;
  a89=(-a58);
  if (res[0]!=0) res[0][245]=a89;
  a89=(-a58);
  if (res[0]!=0) res[0][246]=a89;
  a89=(-a58);
  if (res[0]!=0) res[0][247]=a89;
  a89=(-a58);
  if (res[0]!=0) res[0][248]=a89;
  if (res[0]!=0) res[0][249]=a3;
  a89=(-a58);
  if (res[0]!=0) res[0][250]=a89;
  if (res[0]!=0) res[0][251]=a3;
  a89=(-a58);
  if (res[0]!=0) res[0][252]=a89;
  if (res[0]!=0) res[0][253]=a3;
  a89=(-a58);
  if (res[0]!=0) res[0][254]=a89;
  if (res[0]!=0) res[0][255]=a3;
  a89=(-a58);
  if (res[0]!=0) res[0][256]=a89;
  if (res[0]!=0) res[0][257]=a3;
  a89=(-a58);
  if (res[0]!=0) res[0][258]=a89;
  if (res[0]!=0) res[0][259]=a3;
  a89=(-a58);
  if (res[0]!=0) res[0][260]=a89;
  if (res[0]!=0) res[0][261]=a3;
  a89=(-a58);
  if (res[0]!=0) res[0][262]=a89;
  if (res[0]!=0) res[0][263]=a3;
  a89=(-a58);
  if (res[0]!=0) res[0][264]=a89;
  if (res[0]!=0) res[0][265]=a3;
  a89=(-a58);
  if (res[0]!=0) res[0][266]=a89;
  if (res[0]!=0) res[0][267]=a3;
  a89=(-a58);
  if (res[0]!=0) res[0][268]=a89;
  if (res[0]!=0) res[0][269]=a3;
  a89=(-a58);
  if (res[0]!=0) res[0][270]=a89;
  if (res[0]!=0) res[0][271]=a3;
  a58=(-a58);
  if (res[0]!=0) res[0][272]=a58;
  a58=(a86*a6);
  if (res[0]!=0) res[0][273]=a58;
  if (res[0]!=0) res[0][274]=a90;
  a58=(a86*a6);
  if (res[0]!=0) res[0][275]=a58;
  if (res[0]!=0) res[0][276]=a90;
  a58=(a86*a6);
  if (res[0]!=0) res[0][277]=a58;
  if (res[0]!=0) res[0][278]=a90;
  a58=(a86*a6);
  if (res[0]!=0) res[0][279]=a58;
  if (res[0]!=0) res[0][280]=a90;
  a58=(a86*a6);
  if (res[0]!=0) res[0][281]=a58;
  if (res[0]!=0) res[0][282]=a90;
  a58=(a86*a6);
  if (res[0]!=0) res[0][283]=a58;
  if (res[0]!=0) res[0][284]=a90;
  a58=(a86*a6);
  if (res[0]!=0) res[0][285]=a58;
  if (res[0]!=0) res[0][286]=a90;
  a58=(a86*a6);
  if (res[0]!=0) res[0][287]=a58;
  if (res[0]!=0) res[0][288]=a90;
  a58=(a86*a6);
  if (res[0]!=0) res[0][289]=a58;
  if (res[0]!=0) res[0][290]=a90;
  a58=(a86*a6);
  if (res[0]!=0) res[0][291]=a58;
  if (res[0]!=0) res[0][292]=a90;
  a58=(a86*a6);
  if (res[0]!=0) res[0][293]=a58;
  if (res[0]!=0) res[0][294]=a90;
  a86=(a86*a6);
  if (res[0]!=0) res[0][295]=a86;
  if (res[0]!=0) res[0][296]=a90;
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_complex_to_simple(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem){
  return casadi_f0(arg, res, iw, w, mem);
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_complex_to_simple_alloc_mem(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_complex_to_simple_init_mem(int mem) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_leg_complex_to_simple_free_mem(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_complex_to_simple_checkout(void) {
  return 0;
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_leg_complex_to_simple_release(int mem) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_leg_complex_to_simple_incref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT void eval_jac_g_leg_complex_to_simple_decref(void) {
}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_jac_g_leg_complex_to_simple_n_in(void) { return 2;}

extern "C" CASADI_SYMBOL_EXPORT casadi_int eval_jac_g_leg_complex_to_simple_n_out(void) { return 1;}

extern "C" CASADI_SYMBOL_EXPORT casadi_real eval_jac_g_leg_complex_to_simple_default_in(casadi_int i){
  switch (i) {
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_jac_g_leg_complex_to_simple_name_in(casadi_int i){
  switch (i) {
    case 0: return "w";
    case 1: return "p";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const char* eval_jac_g_leg_complex_to_simple_name_out(casadi_int i){
  switch (i) {
    case 0: return "jac_g";
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_jac_g_leg_complex_to_simple_sparsity_in(casadi_int i) {
  switch (i) {
    case 0: return casadi_s0;
    case 1: return casadi_s1;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT const casadi_int* eval_jac_g_leg_complex_to_simple_sparsity_out(casadi_int i) {
  switch (i) {
    case 0: return casadi_s2;
    default: return 0;
  }
}

extern "C" CASADI_SYMBOL_EXPORT int eval_jac_g_leg_complex_to_simple_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w) {
  if (sz_arg) *sz_arg = 2;
  if (sz_res) *sz_res = 1;
  if (sz_iw) *sz_iw = 0;
  if (sz_w) *sz_w = 0;
  return 0;
}


